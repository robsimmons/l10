//test

unit: type.
one: unit. 

w: world.
a: rel @ w.

foo: type. {-# TYPE foo external #-}
bar: type. {-# TYPE bar external #-}
leaf: foo.
next: bar -> foo.
branch: foo -> foo -> bar.

typ: extensible.
sym: extensible.
var: extensible.

mode: type. {-# TYPE mode external #-}
input: mode.
output: mode.
ignore: mode.

term: type. {-# TYPE term sealed #-}
terms: type. {-# TYPE terms transparent #-}

symConst: sym -> term.
natConst: nat -> term.
strConst: string -> term.
root: sym -> terms -> term.
vr: var -> typ -> term.
md: mode -> typ -> term. 

nil: terms.
cons: term -> terms -> terms.

n: type.
z: n.
s: n -> n.

w2: n -> world.
a2: {N: n} rel @ w2 N.

a2 (s X) <- a2 X, a.
a2 z <- a.

w5: world.
a5: rel @ w5.
w3: n -> n -> world.
a3: {N: n} {M:n} rel @ w3 N M.
a3 (s X) z <- a2 X.
a3 X X <- a, a2 X.
a3 (s X) (s Y) <- a5.

a5 <- a.

w4: n -> n -> n -> world.

w6: n -> n -> n -> n -> n -> world.
a6: {N1}{N2}{N3}{N4}{N5} rel @ w6 N1 N2 N3 N4 N5.
a6 X X Y Y Y <- a.