// Regular expressions

regexp : type.
tok:  string -> regexp.                
emp:  regexp.                     
some: regexp -> regexp.           
seq:  regexp -> regexp -> regexp. 
alt:  regexp -> regexp -> regexp. 

// Parsing regular expressions

w0: world.
w1: regexp -> world.
token: string -> nat -> rel @ w0.
match: {RE: regexp} nat -> nat -> rel @ w1 RE.

token T I -> match (tok T) I (I+1).

token _ I -> match emp I I.

match RE I J -> match (some RE) I J.

match RE I J, 
match (some RE) J K -> 
   match (some RE) I K.

match RE1 I J, 
match RE2 J K -> 
   match (seq RE1 RE2) I K.

match RE1 I J -> match (alt RE1 RE2) I J.

match RE2 I J -> match (alt RE1 RE2) I J.
